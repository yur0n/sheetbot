import { User } from '../../db.js';
import { InlineKeyboard } from 'grammy'
import { replyAndDel, deleteMsg, deleteMsgTime } from './functions.js'

export async function delPhone(conversation, ctx) {
	try {
		let ask = await ctx.reply('–í—ã —É–≤–µ—Ä–µ–Ω—ã?', {
			reply_markup: new InlineKeyboard().text('‚úÖ –î–∞').text('üö´ –û—Ç–º–µ–Ω–∏—Ç—å')
		});
		ctx = await conversation.wait();
		deleteMsg(ctx, ctx.from.id, ctx.message.message_id);
		deleteMsg(ctx, ask.chat.id, ask.message_id)
		if (ctx.update.callback_query?.data == 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å') return
		if (ctx.update.callback_query?.data == '‚úÖ –î–∞') {
			let user = await User.findOne({ telegram: ctx.from.id });
			if (user) {
				await user.updateOne({ phone: '' });
				replyAndDel(ctx, '‚úÖ –ù–æ–º–µ—Ä —É–¥–∞–ª–µ–Ω');
			} else {
				replyAndDel(ctx, '‚ÑπÔ∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
			}
		}
	} catch (error) {
		console.log('Bot error:', error)
		replyAndDel(ctx, `–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ`)
	}
}

export async function addPhone(conversation, ctx) {
	try {
		let ask = await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', {
			reply_markup: new InlineKeyboard().text('üö´ –û—Ç–º–µ–Ω–∏—Ç—å')
		});
		ctx = await conversation.wait();
		deleteMsg(ctx, ctx.from.id, ctx.message.message_id);
		deleteMsg(ctx, ask.chat.id, ask.message_id)
		if (ctx.update.callback_query?.data) return
		if (ctx.msg.text.match(/^\+79\d{9}$/) || ctx.msg.text.match(/^\+380\d{9}$/)) {
			const phone = ctx.msg.text;
			const user = await User.findOneAndUpdate({ telegram: ctx.from.id }, { phone }, { upsert: true, new: true });
			replyAndDel(ctx, `‚úÖ –ù–æ–º–µ—Ä ${phone} —Å–æ—Ö—Ä–∞–Ω–µ–Ω, –∂–¥–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø—Ä–∏–±—ã—Ç–∏–∏ –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤!`, 6_000);
		} else {
			replyAndDel(ctx, '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞');
		}
		
	} catch (error) {
		console.log('Bot admin error:', error)
		replyAndDel(ctx, `–°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ`)
	}
}